poller.c:
Αρχικά ελέγχω τα ορίσματα και τα βάζω στις σωστές μεταβλητές. Στη συνέχεια έχω ενα
while loop στο οποίο δημιουργώ το socket, το δένω με το serverAddress και δημιουργώ
το master thread δίνοντας ως όρισμα το socket. Έτσι εκτελείται η συνάρτηση marterThread,
στην οποία το thread ακούει στη σύνδεση, φτιάχνει τα worker threads και μπαίνει σε ένα
while loop. Εκεί δέχεται τις συνδέσεις με την accept και προσθέτει τη σύνδεση στο
buffer στη θέση bufferIn. Στη συνάρτηση workerThread ο εργάτης παίρνει απο το buffer
τη σύνδεση απο τη θέση bufferOut και στέλνει το μήνυμα "SEND NAME PLEASE" στον πελάτη
περιμένοντας να πάρει το όνομα μέσω της συνάρτησης recv. Μετά ελέγχει αν το όνομα αυτό
υπάρχει και αν δεν υπάρχει στέλνει το μήνυμα "SEND VOTE PLEASE" για να δώσει ο πελάτης
την ψήφο. Τέλος, τοποθετεί το όνομα και την ψήφο στο struct voters, στο struct
stats προσθέτει το κόμμα αν δεν υπάρχει, γράφει στο αρχείο PolLogs και κλείνει τη
σύνδεση με το πελάτη. Ο συγχρονισμός μεταξύ του master thread και των worker threads
γίνεται με τη χρήση mutex και cond variables σύμφωνα με το πρωτόκολλο producer-consumer.
Όταν ληφθεί το σήμα control c, το πρόγραμμα γράφει τα στατιστικά στο αρχείο pollStats και
τερματίζει.


pollSwayer.c:
Το πρόγραμμα αυτό διαβάζει κάθε γραμμή του αρχείου InputFile και αποθηκεύει το όνομα και το
επίθετο στη μεταβλητή name και την ψήφο στη μεταβλητή party χρησιμοποιώντας τη δομή
struct voters. Στη συνέχεια δημιουργεί για κάθε γραμμή που διαβάζει ένα thread το οποίο
δημιουργεί το socket, βρίσκει τη διεύθυνση του server και συνδέεται. Αφού γίνει αυτό
στέλνει το όνομα και την ψήφο και τερματίζει το thread. Για το συγχρονισμό των threads
χρησιμοποιώ mutex.


create_input.sh:
Το script ελέγχει αν ο αριθμός ορισμάτων είναι σωστός και αν υπάρχει το αρχείο
politicalParties. Μετά διαβάζει λέξεις από το αρχείο αυτό και τις αποθηκεύει στο πίνακα
partyNames. Για κάθε numLines βάζει τυχαίες λέξεις στο firstName και στο lastName,
παίρνει ένα τυχαίο κόμμα από τον πίνακα και τα γράφει όλα σε μια γραμμή στο αρχείο
inputFile.


tallyVotes.sh και processLogFile.sh:
Ελέγχουν αν υπάρχουν τα αρχεία inputFile και αν έχουν κατάλληλα δικαιώματα χρήσης.
Στη συνέχεια διαβάζουν κάθε γραμμή από το inputFile και ελέγχουν αν έχει διαβαστεί ξανά το
όνομα και το επίθετο, και αν είναι η πρώτη φορά ελέγχουν αν το κόμμα υπάρχει ήδη στο πίνακα
για να αυξήσουν τους ψήφους. Τέλος, τυπώνουν τα αποτελέσματα στο αρχείο που λέει στο καθένα.


Makefile:
Με την εντολή make θα εκτελεστούν οι εντολές gcc -o poller poller.c -pthread και
gcc -o pollSwayer pollSwayer.c -pthread.
